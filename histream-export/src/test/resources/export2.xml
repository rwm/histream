<?xml version="1.0" encoding="UTF-8"?>
<export xmlns="http://sekmi.de/ns/histream/export-v1">
<!-- 
the export is a three step process:

First, the specified concepts are queried from the fact store/database.

Second, groups are specified, a map is built which can be used
to assign class ids to concepts. This map is used to transform the
resulting eav xml to an extended form where all facts are annotated
with their matching class id. This transformation can be done on the
fly for each encounter DOM (see below)

Third, the resulting XML is read and for each encounter, a DOM is 
constructed (and annotated as specified above). For each encounter
the xpath expressions in the lower part of this document are executed
to construct table data.
-->
	<concepts>
		<group class="d_lab">
			<concept notation="LOINC:26436-6" />
			<concept notation="LOINC:26436-6:NEG" />
		</group>
		<group class="diag">
			<concept wildcard-notation="ICD10:*" />
			<concept iri="http://data.dzl.de/ns/ont/xxx"/>
		</group>
		<concept notation="XYZ" />
	</concepts>


	<patient-table>
		<column header="pid" xpath="@id"/>
		<column header="birthdate" xpath="birthdate"/>
		<column header="gender" xpath="gender"/>
	</patient-table>
	<visit-table>
		<!-- context for XPath expressions is each visit node -->
		<!-- XMLNS for XPath is assumed to be  http://sekmi.de/histream/ns/eav-data -->
		<column header="pid" xpath="../@id"/>
		<column header="visit" xpath="@id"/>
		<!-- concepts for the visit table must occur only once
		per visit and may not repeat -->
		<column header="start" xpath="start"/>
		<!-- What is better? -->
		<!-- (a) First column, then concepts with value -->
		<column header="diagnostik_labort_ts" xpath="facts/fact[@class='d_lab']/@start"/>
		<column header="diagnostik_labort" xpath="facts/fact[@class='d_lab']/@concept"/>
		<!-- (b) first concepts then columns with value -->
		<column header="diagnostik_labort_ts" xpath="facts/fact[@class='d_lab']/@start"/>
		<column header="diagnostik_labort" xpath="facts/fact[@class='d_lab']/modifier[@code='OPB' or @code='PB']/@code"/>
			<!-- We want this: 
					6:NEG -> not tested
					6/mod=OPB -> tested non pathological
					6/mod=PB -> tested pathological 
			-->
	</visit-table>
	<!-- export separate table for repeating elements -->
	<eav-table id="diag" class="diag">
		<!-- context for XPath expressions is each fact node -->
		<column header="pid" xpath="patient-ref"/>
		<column header="visit" xpath="visit-ref"/>
		<column header="start" type="@start"/>
		<column header="code" type="@concept"/>
		<column header="primary" xpath="modifier[@code='fuehrend']/@code"/>
	</eav-table>
</export>